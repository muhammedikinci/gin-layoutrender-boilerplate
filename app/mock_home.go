// Code generated by MockGen. DO NOT EDIT.
// Source: home.go

// Package app is a generated GoMock package.
package app

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHomeRepository is a mock of HomeRepository interface.
type MockHomeRepository struct {
	ctrl     *gomock.Controller
	recorder *MockHomeRepositoryMockRecorder
}

// MockHomeRepositoryMockRecorder is the mock recorder for MockHomeRepository.
type MockHomeRepositoryMockRecorder struct {
	mock *MockHomeRepository
}

// NewMockHomeRepository creates a new mock instance.
func NewMockHomeRepository(ctrl *gomock.Controller) *MockHomeRepository {
	mock := &MockHomeRepository{ctrl: ctrl}
	mock.recorder = &MockHomeRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHomeRepository) EXPECT() *MockHomeRepositoryMockRecorder {
	return m.recorder
}

// GetH1 mocks base method.
func (m *MockHomeRepository) GetH1() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetH1")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetH1 indicates an expected call of GetH1.
func (mr *MockHomeRepositoryMockRecorder) GetH1() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetH1", reflect.TypeOf((*MockHomeRepository)(nil).GetH1))
}
